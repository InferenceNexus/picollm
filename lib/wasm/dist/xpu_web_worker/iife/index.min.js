var XpuWebWorker=function(){"use strict";function I(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}function g(g,C){if(g){if("string"==typeof g)return I(g,C);var e=Object.prototype.toString.call(g).slice(8,-1);return"Object"===e&&g.constructor&&(e=g.constructor.name),"Map"===e||"Set"===e?Array.from(g):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?I(g,C):void 0}}function C(I,C){return function(I){if(Array.isArray(I))return I}(I)||function(I,g){var C=null==I?null:"undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(null!=C){var e,A,t,r,c=[],i=!0,n=!1;try{if(t=(C=C.call(I)).next,0===g){if(Object(C)!==C)return;i=!1}else for(;!(i=(e=t.call(C)).done)&&(c.push(e.value),c.length!==g);i=!0);}catch(I){n=!0,A=I}finally{try{if(!i&&null!=C.return&&(r=C.return(),Object(r)!==r))return}finally{if(n)throw A}}return c}}(I,C)||g(I,C)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(I,g,C,e,A,t,r){try{var c=I[t](r),i=c.value}catch(I){return void C(I)}c.done?g(i):Promise.resolve(i).then(e,A)}function A(I){return function(){var g=this,C=arguments;return new Promise((function(A,t){var r=I.apply(g,C);function c(I){e(r,A,t,c,i,"next",I)}function i(I){e(r,A,t,c,i,"throw",I)}c(void 0)}))}}function t(I){return I&&I.__esModule&&Object.prototype.hasOwnProperty.call(I,"default")?I.default:I}var r={exports:{}},c={exports:{}};!function(I){function g(C){return I.exports=g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(I){return typeof I}:function(I){return I&&"function"==typeof Symbol&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},I.exports.__esModule=!0,I.exports.default=I.exports,g(C)}I.exports=g,I.exports.__esModule=!0,I.exports.default=I.exports}(c);var i=c.exports;!function(I){var g=i.default;function C(){I.exports=C=function(){return A},I.exports.__esModule=!0,I.exports.default=I.exports;var e,A={},t=Object.prototype,r=t.hasOwnProperty,c=Object.defineProperty||function(I,g,C){I[g]=C.value},i="function"==typeof Symbol?Symbol:{},n=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",o=i.toStringTag||"@@toStringTag";function s(I,g,C){return Object.defineProperty(I,g,{value:C,enumerable:!0,configurable:!0,writable:!0}),I[g]}try{s({},"")}catch(e){s=function(I,g,C){return I[g]=C}}function d(I,g,C,e){var A=g&&g.prototype instanceof y?g:y,t=Object.create(A.prototype),r=new f(e||[]);return c(t,"_invoke",{value:S(I,C,r)}),t}function a(I,g,C){try{return{type:"normal",arg:I.call(g,C)}}catch(I){return{type:"throw",arg:I}}}A.wrap=d;var b="suspendedStart",Z="suspendedYield",m="executing",u="completed",B={};function y(){}function G(){}function V(){}var W={};s(W,n,(function(){return this}));var h=Object.getPrototypeOf,R=h&&h(h(F([])));R&&R!==t&&r.call(R,n)&&(W=R);var p=V.prototype=y.prototype=Object.create(W);function X(I){["next","throw","return"].forEach((function(g){s(I,g,(function(I){return this._invoke(g,I)}))}))}function H(I,C){function e(A,t,c,i){var n=a(I[A],I,t);if("throw"!==n.type){var l=n.arg,o=l.value;return o&&"object"==g(o)&&r.call(o,"__await")?C.resolve(o.__await).then((function(I){e("next",I,c,i)}),(function(I){e("throw",I,c,i)})):C.resolve(o).then((function(I){l.value=I,c(l)}),(function(I){return e("throw",I,c,i)}))}i(n.arg)}var A;c(this,"_invoke",{value:function(I,g){function t(){return new C((function(C,A){e(I,g,C,A)}))}return A=A?A.then(t,t):t()}})}function S(I,g,C){var A=b;return function(t,r){if(A===m)throw new Error("Generator is already running");if(A===u){if("throw"===t)throw r;return{value:e,done:!0}}for(C.method=t,C.arg=r;;){var c=C.delegate;if(c){var i=J(c,C);if(i){if(i===B)continue;return i}}if("next"===C.method)C.sent=C._sent=C.arg;else if("throw"===C.method){if(A===b)throw A=u,C.arg;C.dispatchException(C.arg)}else"return"===C.method&&C.abrupt("return",C.arg);A=m;var n=a(I,g,C);if("normal"===n.type){if(A=C.done?u:Z,n.arg===B)continue;return{value:n.arg,done:C.done}}"throw"===n.type&&(A=u,C.method="throw",C.arg=n.arg)}}}function J(I,g){var C=g.method,A=I.iterator[C];if(A===e)return g.delegate=null,"throw"===C&&I.iterator.return&&(g.method="return",g.arg=e,J(I,g),"throw"===g.method)||"return"!==C&&(g.method="throw",g.arg=new TypeError("The iterator does not provide a '"+C+"' method")),B;var t=a(A,I.iterator,g.arg);if("throw"===t.type)return g.method="throw",g.arg=t.arg,g.delegate=null,B;var r=t.arg;return r?r.done?(g[I.resultName]=r.value,g.next=I.nextLoc,"return"!==g.method&&(g.method="next",g.arg=e),g.delegate=null,B):r:(g.method="throw",g.arg=new TypeError("iterator result is not an object"),g.delegate=null,B)}function k(I){var g={tryLoc:I[0]};1 in I&&(g.catchLoc=I[1]),2 in I&&(g.finallyLoc=I[2],g.afterLoc=I[3]),this.tryEntries.push(g)}function w(I){var g=I.completion||{};g.type="normal",delete g.arg,I.completion=g}function f(I){this.tryEntries=[{tryLoc:"root"}],I.forEach(k,this),this.reset(!0)}function F(I){if(I||""===I){var C=I[n];if(C)return C.call(I);if("function"==typeof I.next)return I;if(!isNaN(I.length)){var A=-1,t=function g(){for(;++A<I.length;)if(r.call(I,A))return g.value=I[A],g.done=!1,g;return g.value=e,g.done=!0,g};return t.next=t}}throw new TypeError(g(I)+" is not iterable")}return G.prototype=V,c(p,"constructor",{value:V,configurable:!0}),c(V,"constructor",{value:G,configurable:!0}),G.displayName=s(V,o,"GeneratorFunction"),A.isGeneratorFunction=function(I){var g="function"==typeof I&&I.constructor;return!!g&&(g===G||"GeneratorFunction"===(g.displayName||g.name))},A.mark=function(I){return Object.setPrototypeOf?Object.setPrototypeOf(I,V):(I.__proto__=V,s(I,o,"GeneratorFunction")),I.prototype=Object.create(p),I},A.awrap=function(I){return{__await:I}},X(H.prototype),s(H.prototype,l,(function(){return this})),A.AsyncIterator=H,A.async=function(I,g,C,e,t){void 0===t&&(t=Promise);var r=new H(d(I,g,C,e),t);return A.isGeneratorFunction(g)?r:r.next().then((function(I){return I.done?I.value:r.next()}))},X(p),s(p,o,"Generator"),s(p,n,(function(){return this})),s(p,"toString",(function(){return"[object Generator]"})),A.keys=function(I){var g=Object(I),C=[];for(var e in g)C.push(e);return C.reverse(),function I(){for(;C.length;){var e=C.pop();if(e in g)return I.value=e,I.done=!1,I}return I.done=!0,I}},A.values=F,f.prototype={constructor:f,reset:function(I){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(w),!I)for(var g in this)"t"===g.charAt(0)&&r.call(this,g)&&!isNaN(+g.slice(1))&&(this[g]=e)},stop:function(){this.done=!0;var I=this.tryEntries[0].completion;if("throw"===I.type)throw I.arg;return this.rval},dispatchException:function(I){if(this.done)throw I;var g=this;function C(C,A){return c.type="throw",c.arg=I,g.next=C,A&&(g.method="next",g.arg=e),!!A}for(var A=this.tryEntries.length-1;A>=0;--A){var t=this.tryEntries[A],c=t.completion;if("root"===t.tryLoc)return C("end");if(t.tryLoc<=this.prev){var i=r.call(t,"catchLoc"),n=r.call(t,"finallyLoc");if(i&&n){if(this.prev<t.catchLoc)return C(t.catchLoc,!0);if(this.prev<t.finallyLoc)return C(t.finallyLoc)}else if(i){if(this.prev<t.catchLoc)return C(t.catchLoc,!0)}else{if(!n)throw new Error("try statement without catch or finally");if(this.prev<t.finallyLoc)return C(t.finallyLoc)}}}},abrupt:function(I,g){for(var C=this.tryEntries.length-1;C>=0;--C){var e=this.tryEntries[C];if(e.tryLoc<=this.prev&&r.call(e,"finallyLoc")&&this.prev<e.finallyLoc){var A=e;break}}A&&("break"===I||"continue"===I)&&A.tryLoc<=g&&g<=A.finallyLoc&&(A=null);var t=A?A.completion:{};return t.type=I,t.arg=g,A?(this.method="next",this.next=A.finallyLoc,B):this.complete(t)},complete:function(I,g){if("throw"===I.type)throw I.arg;return"break"===I.type||"continue"===I.type?this.next=I.arg:"return"===I.type?(this.rval=this.arg=I.arg,this.method="return",this.next="end"):"normal"===I.type&&g&&(this.next=g),B},finish:function(I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.finallyLoc===I)return this.complete(C.completion,C.afterLoc),w(C),B}},catch:function(I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.tryLoc===I){var e=C.completion;if("throw"===e.type){var A=e.arg;w(C)}return A}}throw new Error("illegal catch attempt")},delegateYield:function(I,g,C){return this.delegate={iterator:F(I),resultName:g,nextLoc:C},"next"===this.method&&(this.arg=e),B}},A}I.exports=C,I.exports.__esModule=!0,I.exports.default=I.exports}(r);var n=(0,r.exports)(),l=n;try{regeneratorRuntime=n}catch(I){"object"==typeof globalThis?globalThis.regeneratorRuntime=n:Function("r","regeneratorRuntime = r")(n)}var o=t(l);const s={"Amazon Silk":"amazon_silk","Android Browser":"android",Bada:"bada",BlackBerry:"blackberry",Chrome:"chrome",Chromium:"chromium",Electron:"electron",Epiphany:"epiphany",Firefox:"firefox",Focus:"focus",Generic:"generic","Google Search":"google_search",Googlebot:"googlebot","Internet Explorer":"ie","K-Meleon":"k_meleon",Maxthon:"maxthon","Microsoft Edge":"edge","MZ Browser":"mz","NAVER Whale Browser":"naver",Opera:"opera","Opera Coast":"opera_coast",PhantomJS:"phantomjs",Puffin:"puffin",QupZilla:"qupzilla",QQ:"qq",QQLite:"qqlite",Safari:"safari",Sailfish:"sailfish","Samsung Internet for Android":"samsung_internet",SeaMonkey:"seamonkey",Sleipnir:"sleipnir",Swing:"swing",Tizen:"tizen","UC Browser":"uc",Vivaldi:"vivaldi","WebOS Browser":"webos",WeChat:"wechat","Yandex Browser":"yandex",Roku:"roku"},d={amazon_silk:"Amazon Silk",android:"Android Browser",bada:"Bada",blackberry:"BlackBerry",chrome:"Chrome",chromium:"Chromium",electron:"Electron",epiphany:"Epiphany",firefox:"Firefox",focus:"Focus",generic:"Generic",googlebot:"Googlebot",google_search:"Google Search",ie:"Internet Explorer",k_meleon:"K-Meleon",maxthon:"Maxthon",edge:"Microsoft Edge",mz:"MZ Browser",naver:"NAVER Whale Browser",opera:"Opera",opera_coast:"Opera Coast",phantomjs:"PhantomJS",puffin:"Puffin",qupzilla:"QupZilla",qq:"QQ Browser",qqlite:"QQ Browser Lite",safari:"Safari",sailfish:"Sailfish",samsung_internet:"Samsung Internet for Android",seamonkey:"SeaMonkey",sleipnir:"Sleipnir",swing:"Swing",tizen:"Tizen",uc:"UC Browser",vivaldi:"Vivaldi",webos:"WebOS Browser",wechat:"WeChat",yandex:"Yandex Browser"},a={tablet:"tablet",mobile:"mobile",desktop:"desktop",tv:"tv"},b={WindowsPhone:"Windows Phone",Windows:"Windows",MacOS:"macOS",iOS:"iOS",Android:"Android",WebOS:"WebOS",BlackBerry:"BlackBerry",Bada:"Bada",Tizen:"Tizen",Linux:"Linux",ChromeOS:"Chrome OS",PlayStation4:"PlayStation 4",Roku:"Roku"},Z={EdgeHTML:"EdgeHTML",Blink:"Blink",Trident:"Trident",Presto:"Presto",Gecko:"Gecko",WebKit:"WebKit"};class m{static getFirstMatch(I,g){const C=g.match(I);return C&&C.length>0&&C[1]||""}static getSecondMatch(I,g){const C=g.match(I);return C&&C.length>1&&C[2]||""}static matchAndReturnConst(I,g,C){if(I.test(g))return C}static getWindowsVersionName(I){switch(I){case"NT":return"NT";case"XP":case"NT 5.1":return"XP";case"NT 5.0":return"2000";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}}static getMacOSVersionName(I){const g=I.split(".").splice(0,2).map((I=>parseInt(I,10)||0));if(g.push(0),10===g[0])switch(g[1]){case 5:return"Leopard";case 6:return"Snow Leopard";case 7:return"Lion";case 8:return"Mountain Lion";case 9:return"Mavericks";case 10:return"Yosemite";case 11:return"El Capitan";case 12:return"Sierra";case 13:return"High Sierra";case 14:return"Mojave";case 15:return"Catalina";default:return}}static getAndroidVersionName(I){const g=I.split(".").splice(0,2).map((I=>parseInt(I,10)||0));if(g.push(0),!(1===g[0]&&g[1]<5))return 1===g[0]&&g[1]<6?"Cupcake":1===g[0]&&g[1]>=6?"Donut":2===g[0]&&g[1]<2?"Eclair":2===g[0]&&2===g[1]?"Froyo":2===g[0]&&g[1]>2?"Gingerbread":3===g[0]?"Honeycomb":4===g[0]&&g[1]<1?"Ice Cream Sandwich":4===g[0]&&g[1]<4?"Jelly Bean":4===g[0]&&g[1]>=4?"KitKat":5===g[0]?"Lollipop":6===g[0]?"Marshmallow":7===g[0]?"Nougat":8===g[0]?"Oreo":9===g[0]?"Pie":void 0}static getVersionPrecision(I){return I.split(".").length}static compareVersions(I,g,C=!1){const e=m.getVersionPrecision(I),A=m.getVersionPrecision(g);let t=Math.max(e,A),r=0;const c=m.map([I,g],(I=>{const g=t-m.getVersionPrecision(I),C=I+new Array(g+1).join(".0");return m.map(C.split("."),(I=>new Array(20-I.length).join("0")+I)).reverse()}));for(C&&(r=t-Math.min(e,A)),t-=1;t>=r;){if(c[0][t]>c[1][t])return 1;if(c[0][t]===c[1][t]){if(t===r)return 0;t-=1}else if(c[0][t]<c[1][t])return-1}}static map(I,g){const C=[];let e;if(Array.prototype.map)return Array.prototype.map.call(I,g);for(e=0;e<I.length;e+=1)C.push(g(I[e]));return C}static find(I,g){let C,e;if(Array.prototype.find)return Array.prototype.find.call(I,g);for(C=0,e=I.length;C<e;C+=1){const e=I[C];if(g(e,C))return e}}static assign(I,...g){const C=I;let e,A;if(Object.assign)return Object.assign(I,...g);for(e=0,A=g.length;e<A;e+=1){const I=g[e];if("object"==typeof I&&null!==I){Object.keys(I).forEach((g=>{C[g]=I[g]}))}}return I}static getBrowserAlias(I){return s[I]}static getBrowserTypeByAlias(I){return d[I]||""}}const u=/version\/(\d+(\.?_?\d+)+)/i,B=[{test:[/googlebot/i],describe(I){const g={name:"Googlebot"},C=m.getFirstMatch(/googlebot\/(\d+(\.\d+))/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/opera/i],describe(I){const g={name:"Opera"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/opr\/|opios/i],describe(I){const g={name:"Opera"},C=m.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/SamsungBrowser/i],describe(I){const g={name:"Samsung Internet for Android"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/Whale/i],describe(I){const g={name:"NAVER Whale Browser"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/MZBrowser/i],describe(I){const g={name:"MZ Browser"},C=m.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/focus/i],describe(I){const g={name:"Focus"},C=m.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/swing/i],describe(I){const g={name:"Swing"},C=m.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/coast/i],describe(I){const g={name:"Opera Coast"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/opt\/\d+(?:.?_?\d+)+/i],describe(I){const g={name:"Opera Touch"},C=m.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/yabrowser/i],describe(I){const g={name:"Yandex Browser"},C=m.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/ucbrowser/i],describe(I){const g={name:"UC Browser"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/Maxthon|mxios/i],describe(I){const g={name:"Maxthon"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/epiphany/i],describe(I){const g={name:"Epiphany"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/puffin/i],describe(I){const g={name:"Puffin"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/sleipnir/i],describe(I){const g={name:"Sleipnir"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/k-meleon/i],describe(I){const g={name:"K-Meleon"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/micromessenger/i],describe(I){const g={name:"WeChat"},C=m.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/qqbrowser/i],describe(I){const g={name:/qqbrowserlite/i.test(I)?"QQ Browser Lite":"QQ Browser"},C=m.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/msie|trident/i],describe(I){const g={name:"Internet Explorer"},C=m.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/\sedg\//i],describe(I){const g={name:"Microsoft Edge"},C=m.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/edg([ea]|ios)/i],describe(I){const g={name:"Microsoft Edge"},C=m.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/vivaldi/i],describe(I){const g={name:"Vivaldi"},C=m.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/seamonkey/i],describe(I){const g={name:"SeaMonkey"},C=m.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/sailfish/i],describe(I){const g={name:"Sailfish"},C=m.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i,I);return C&&(g.version=C),g}},{test:[/silk/i],describe(I){const g={name:"Amazon Silk"},C=m.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/phantom/i],describe(I){const g={name:"PhantomJS"},C=m.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/slimerjs/i],describe(I){const g={name:"SlimerJS"},C=m.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(I){const g={name:"BlackBerry"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/(web|hpw)[o0]s/i],describe(I){const g={name:"WebOS Browser"},C=m.getFirstMatch(u,I)||m.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/bada/i],describe(I){const g={name:"Bada"},C=m.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/tizen/i],describe(I){const g={name:"Tizen"},C=m.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/qupzilla/i],describe(I){const g={name:"QupZilla"},C=m.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/firefox|iceweasel|fxios/i],describe(I){const g={name:"Firefox"},C=m.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/electron/i],describe(I){const g={name:"Electron"},C=m.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/MiuiBrowser/i],describe(I){const g={name:"Miui"},C=m.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/chromium/i],describe(I){const g={name:"Chromium"},C=m.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,I)||m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/chrome|crios|crmo/i],describe(I){const g={name:"Chrome"},C=m.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/GSA/i],describe(I){const g={name:"Google Search"},C=m.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test(I){const g=!I.test(/like android/i),C=I.test(/android/i);return g&&C},describe(I){const g={name:"Android Browser"},C=m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/playstation 4/i],describe(I){const g={name:"PlayStation 4"},C=m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/safari|applewebkit/i],describe(I){const g={name:"Safari"},C=m.getFirstMatch(u,I);return C&&(g.version=C),g}},{test:[/.*/i],describe(I){const g=-1!==I.search("\\(")?/^(.*)\/(.*)[ \t]\((.*)/:/^(.*)\/(.*) /;return{name:m.getFirstMatch(g,I),version:m.getSecondMatch(g,I)}}}];var y=[{test:[/Roku\/DVP/],describe(I){const g=m.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i,I);return{name:b.Roku,version:g}}},{test:[/windows phone/i],describe(I){const g=m.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i,I);return{name:b.WindowsPhone,version:g}}},{test:[/windows /i],describe(I){const g=m.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i,I),C=m.getWindowsVersionName(g);return{name:b.Windows,version:g,versionName:C}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe(I){const g={name:b.iOS},C=m.getSecondMatch(/(Version\/)(\d[\d.]+)/,I);return C&&(g.version=C),g}},{test:[/macintosh/i],describe(I){const g=m.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i,I).replace(/[_\s]/g,"."),C=m.getMacOSVersionName(g),e={name:b.MacOS,version:g};return C&&(e.versionName=C),e}},{test:[/(ipod|iphone|ipad)/i],describe(I){const g=m.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i,I).replace(/[_\s]/g,".");return{name:b.iOS,version:g}}},{test(I){const g=!I.test(/like android/i),C=I.test(/android/i);return g&&C},describe(I){const g=m.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i,I),C=m.getAndroidVersionName(g),e={name:b.Android,version:g};return C&&(e.versionName=C),e}},{test:[/(web|hpw)[o0]s/i],describe(I){const g=m.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,I),C={name:b.WebOS};return g&&g.length&&(C.version=g),C}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(I){const g=m.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i,I)||m.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i,I)||m.getFirstMatch(/\bbb(\d+)/i,I);return{name:b.BlackBerry,version:g}}},{test:[/bada/i],describe(I){const g=m.getFirstMatch(/bada\/(\d+(\.\d+)*)/i,I);return{name:b.Bada,version:g}}},{test:[/tizen/i],describe(I){const g=m.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i,I);return{name:b.Tizen,version:g}}},{test:[/linux/i],describe:()=>({name:b.Linux})},{test:[/CrOS/],describe:()=>({name:b.ChromeOS})},{test:[/PlayStation 4/],describe(I){const g=m.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i,I);return{name:b.PlayStation4,version:g}}}],G=[{test:[/googlebot/i],describe:()=>({type:"bot",vendor:"Google"})},{test:[/huawei/i],describe(I){const g=m.getFirstMatch(/(can-l01)/i,I)&&"Nova",C={type:a.mobile,vendor:"Huawei"};return g&&(C.model=g),C}},{test:[/nexus\s*(?:7|8|9|10).*/i],describe:()=>({type:a.tablet,vendor:"Nexus"})},{test:[/ipad/i],describe:()=>({type:a.tablet,vendor:"Apple",model:"iPad"})},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:()=>({type:a.tablet,vendor:"Apple",model:"iPad"})},{test:[/kftt build/i],describe:()=>({type:a.tablet,vendor:"Amazon",model:"Kindle Fire HD 7"})},{test:[/silk/i],describe:()=>({type:a.tablet,vendor:"Amazon"})},{test:[/tablet(?! pc)/i],describe:()=>({type:a.tablet})},{test(I){const g=I.test(/ipod|iphone/i),C=I.test(/like (ipod|iphone)/i);return g&&!C},describe(I){const g=m.getFirstMatch(/(ipod|iphone)/i,I);return{type:a.mobile,vendor:"Apple",model:g}}},{test:[/nexus\s*[0-6].*/i,/galaxy nexus/i],describe:()=>({type:a.mobile,vendor:"Nexus"})},{test:[/[^-]mobi/i],describe:()=>({type:a.mobile})},{test:I=>"blackberry"===I.getBrowserName(!0),describe:()=>({type:a.mobile,vendor:"BlackBerry"})},{test:I=>"bada"===I.getBrowserName(!0),describe:()=>({type:a.mobile})},{test:I=>"windows phone"===I.getBrowserName(),describe:()=>({type:a.mobile,vendor:"Microsoft"})},{test(I){const g=Number(String(I.getOSVersion()).split(".")[0]);return"android"===I.getOSName(!0)&&g>=3},describe:()=>({type:a.tablet})},{test:I=>"android"===I.getOSName(!0),describe:()=>({type:a.mobile})},{test:I=>"macos"===I.getOSName(!0),describe:()=>({type:a.desktop,vendor:"Apple"})},{test:I=>"windows"===I.getOSName(!0),describe:()=>({type:a.desktop})},{test:I=>"linux"===I.getOSName(!0),describe:()=>({type:a.desktop})},{test:I=>"playstation 4"===I.getOSName(!0),describe:()=>({type:a.tv})},{test:I=>"roku"===I.getOSName(!0),describe:()=>({type:a.tv})}],V=[{test:I=>"microsoft edge"===I.getBrowserName(!0),describe(I){if(/\sedg\//i.test(I))return{name:Z.Blink};const g=m.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i,I);return{name:Z.EdgeHTML,version:g}}},{test:[/trident/i],describe(I){const g={name:Z.Trident},C=m.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:I=>I.test(/presto/i),describe(I){const g={name:Z.Presto},C=m.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test(I){const g=I.test(/gecko/i),C=I.test(/like gecko/i);return g&&!C},describe(I){const g={name:Z.Gecko},C=m.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/(apple)?webkit\/537\.36/i],describe:()=>({name:Z.Blink})},{test:[/(apple)?webkit/i],describe(I){const g={name:Z.WebKit},C=m.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}}];class W{constructor(I,g=!1){if(null==I||""===I)throw new Error("UserAgent parameter can't be empty");this._ua=I,this.parsedResult={},!0!==g&&this.parse()}getUA(){return this._ua}test(I){return I.test(this._ua)}parseBrowser(){this.parsedResult.browser={};const I=m.find(B,(I=>{if("function"==typeof I.test)return I.test(this);if(I.test instanceof Array)return I.test.some((I=>this.test(I)));throw new Error("Browser's test function is not valid")}));return I&&(this.parsedResult.browser=I.describe(this.getUA())),this.parsedResult.browser}getBrowser(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()}getBrowserName(I){return I?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""}getBrowserVersion(){return this.getBrowser().version}getOS(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()}parseOS(){this.parsedResult.os={};const I=m.find(y,(I=>{if("function"==typeof I.test)return I.test(this);if(I.test instanceof Array)return I.test.some((I=>this.test(I)));throw new Error("Browser's test function is not valid")}));return I&&(this.parsedResult.os=I.describe(this.getUA())),this.parsedResult.os}getOSName(I){const{name:g}=this.getOS();return I?String(g).toLowerCase()||"":g||""}getOSVersion(){return this.getOS().version}getPlatform(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()}getPlatformType(I=!1){const{type:g}=this.getPlatform();return I?String(g).toLowerCase()||"":g||""}parsePlatform(){this.parsedResult.platform={};const I=m.find(G,(I=>{if("function"==typeof I.test)return I.test(this);if(I.test instanceof Array)return I.test.some((I=>this.test(I)));throw new Error("Browser's test function is not valid")}));return I&&(this.parsedResult.platform=I.describe(this.getUA())),this.parsedResult.platform}getEngine(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()}getEngineName(I){return I?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""}parseEngine(){this.parsedResult.engine={};const I=m.find(V,(I=>{if("function"==typeof I.test)return I.test(this);if(I.test instanceof Array)return I.test.some((I=>this.test(I)));throw new Error("Browser's test function is not valid")}));return I&&(this.parsedResult.engine=I.describe(this.getUA())),this.parsedResult.engine}parse(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this}getResult(){return m.assign({},this.parsedResult)}satisfies(I){const g={};let C=0;const e={};let A=0;if(Object.keys(I).forEach((t=>{const r=I[t];"string"==typeof r?(e[t]=r,A+=1):"object"==typeof r&&(g[t]=r,C+=1)})),C>0){const I=Object.keys(g),C=m.find(I,(I=>this.isOS(I)));if(C){const I=this.satisfies(g[C]);if(void 0!==I)return I}const e=m.find(I,(I=>this.isPlatform(I)));if(e){const I=this.satisfies(g[e]);if(void 0!==I)return I}}if(A>0){const I=Object.keys(e),g=m.find(I,(I=>this.isBrowser(I,!0)));if(void 0!==g)return this.compareVersion(e[g])}}isBrowser(I,g=!1){const C=this.getBrowserName().toLowerCase();let e=I.toLowerCase();const A=m.getBrowserTypeByAlias(e);return g&&A&&(e=A.toLowerCase()),e===C}compareVersion(I){let g=[0],C=I,e=!1;const A=this.getBrowserVersion();if("string"==typeof A)return">"===I[0]||"<"===I[0]?(C=I.substr(1),"="===I[1]?(e=!0,C=I.substr(2)):g=[],">"===I[0]?g.push(1):g.push(-1)):"="===I[0]?C=I.substr(1):"~"===I[0]&&(e=!0,C=I.substr(1)),g.indexOf(m.compareVersions(A,C,e))>-1}isOS(I){return this.getOSName(!0)===String(I).toLowerCase()}isPlatform(I){return this.getPlatformType(!0)===String(I).toLowerCase()}isEngine(I){return this.getEngineName(!0)===String(I).toLowerCase()}is(I,g=!1){return this.isBrowser(I,g)||this.isOS(I)||this.isPlatform(I)}some(I=[]){return I.some((I=>this.is(I)))}}
/*!
   * Bowser - a browser detector
   * https://github.com/lancedikson/bowser
   * MIT License | (c) Dustin Diaz 2012-2015
   * MIT License | (c) Denis Demchenko 2015-2019
   */class h{static getParser(I,g=!1){if("string"!=typeof I)throw new Error("UserAgent should be a string");return new W(I,g)}static parse(I){return new W(I).getResult()}static get BROWSER_MAP(){return d}static get ENGINE_MAP(){return Z}static get OS_MAP(){return b}static get PLATFORMS_MAP(){return a}}var R={exports:{}},p={exports:{}};!function(I){function g(C){return I.exports=g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(I){return typeof I}:function(I){return I&&"function"==typeof Symbol&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},I.exports.__esModule=!0,I.exports.default=I.exports,g(C)}I.exports=g,I.exports.__esModule=!0,I.exports.default=I.exports}(p);var X=p.exports;!function(I){var g=X.default;function C(){I.exports=C=function(){return A},I.exports.__esModule=!0,I.exports.default=I.exports;var e,A={},t=Object.prototype,r=t.hasOwnProperty,c=Object.defineProperty||function(I,g,C){I[g]=C.value},i="function"==typeof Symbol?Symbol:{},n=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",o=i.toStringTag||"@@toStringTag";function s(I,g,C){return Object.defineProperty(I,g,{value:C,enumerable:!0,configurable:!0,writable:!0}),I[g]}try{s({},"")}catch(e){s=function(I,g,C){return I[g]=C}}function d(I,g,C,e){var A=g&&g.prototype instanceof y?g:y,t=Object.create(A.prototype),r=new f(e||[]);return c(t,"_invoke",{value:S(I,C,r)}),t}function a(I,g,C){try{return{type:"normal",arg:I.call(g,C)}}catch(I){return{type:"throw",arg:I}}}A.wrap=d;var b="suspendedStart",Z="suspendedYield",m="executing",u="completed",B={};function y(){}function G(){}function V(){}var W={};s(W,n,(function(){return this}));var h=Object.getPrototypeOf,R=h&&h(h(F([])));R&&R!==t&&r.call(R,n)&&(W=R);var p=V.prototype=y.prototype=Object.create(W);function X(I){["next","throw","return"].forEach((function(g){s(I,g,(function(I){return this._invoke(g,I)}))}))}function H(I,C){function e(A,t,c,i){var n=a(I[A],I,t);if("throw"!==n.type){var l=n.arg,o=l.value;return o&&"object"==g(o)&&r.call(o,"__await")?C.resolve(o.__await).then((function(I){e("next",I,c,i)}),(function(I){e("throw",I,c,i)})):C.resolve(o).then((function(I){l.value=I,c(l)}),(function(I){return e("throw",I,c,i)}))}i(n.arg)}var A;c(this,"_invoke",{value:function(I,g){function t(){return new C((function(C,A){e(I,g,C,A)}))}return A=A?A.then(t,t):t()}})}function S(I,g,C){var A=b;return function(t,r){if(A===m)throw new Error("Generator is already running");if(A===u){if("throw"===t)throw r;return{value:e,done:!0}}for(C.method=t,C.arg=r;;){var c=C.delegate;if(c){var i=J(c,C);if(i){if(i===B)continue;return i}}if("next"===C.method)C.sent=C._sent=C.arg;else if("throw"===C.method){if(A===b)throw A=u,C.arg;C.dispatchException(C.arg)}else"return"===C.method&&C.abrupt("return",C.arg);A=m;var n=a(I,g,C);if("normal"===n.type){if(A=C.done?u:Z,n.arg===B)continue;return{value:n.arg,done:C.done}}"throw"===n.type&&(A=u,C.method="throw",C.arg=n.arg)}}}function J(I,g){var C=g.method,A=I.iterator[C];if(A===e)return g.delegate=null,"throw"===C&&I.iterator.return&&(g.method="return",g.arg=e,J(I,g),"throw"===g.method)||"return"!==C&&(g.method="throw",g.arg=new TypeError("The iterator does not provide a '"+C+"' method")),B;var t=a(A,I.iterator,g.arg);if("throw"===t.type)return g.method="throw",g.arg=t.arg,g.delegate=null,B;var r=t.arg;return r?r.done?(g[I.resultName]=r.value,g.next=I.nextLoc,"return"!==g.method&&(g.method="next",g.arg=e),g.delegate=null,B):r:(g.method="throw",g.arg=new TypeError("iterator result is not an object"),g.delegate=null,B)}function k(I){var g={tryLoc:I[0]};1 in I&&(g.catchLoc=I[1]),2 in I&&(g.finallyLoc=I[2],g.afterLoc=I[3]),this.tryEntries.push(g)}function w(I){var g=I.completion||{};g.type="normal",delete g.arg,I.completion=g}function f(I){this.tryEntries=[{tryLoc:"root"}],I.forEach(k,this),this.reset(!0)}function F(I){if(I||""===I){var C=I[n];if(C)return C.call(I);if("function"==typeof I.next)return I;if(!isNaN(I.length)){var A=-1,t=function g(){for(;++A<I.length;)if(r.call(I,A))return g.value=I[A],g.done=!1,g;return g.value=e,g.done=!0,g};return t.next=t}}throw new TypeError(g(I)+" is not iterable")}return G.prototype=V,c(p,"constructor",{value:V,configurable:!0}),c(V,"constructor",{value:G,configurable:!0}),G.displayName=s(V,o,"GeneratorFunction"),A.isGeneratorFunction=function(I){var g="function"==typeof I&&I.constructor;return!!g&&(g===G||"GeneratorFunction"===(g.displayName||g.name))},A.mark=function(I){return Object.setPrototypeOf?Object.setPrototypeOf(I,V):(I.__proto__=V,s(I,o,"GeneratorFunction")),I.prototype=Object.create(p),I},A.awrap=function(I){return{__await:I}},X(H.prototype),s(H.prototype,l,(function(){return this})),A.AsyncIterator=H,A.async=function(I,g,C,e,t){void 0===t&&(t=Promise);var r=new H(d(I,g,C,e),t);return A.isGeneratorFunction(g)?r:r.next().then((function(I){return I.done?I.value:r.next()}))},X(p),s(p,o,"Generator"),s(p,n,(function(){return this})),s(p,"toString",(function(){return"[object Generator]"})),A.keys=function(I){var g=Object(I),C=[];for(var e in g)C.push(e);return C.reverse(),function I(){for(;C.length;){var e=C.pop();if(e in g)return I.value=e,I.done=!1,I}return I.done=!0,I}},A.values=F,f.prototype={constructor:f,reset:function(I){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(w),!I)for(var g in this)"t"===g.charAt(0)&&r.call(this,g)&&!isNaN(+g.slice(1))&&(this[g]=e)},stop:function(){this.done=!0;var I=this.tryEntries[0].completion;if("throw"===I.type)throw I.arg;return this.rval},dispatchException:function(I){if(this.done)throw I;var g=this;function C(C,A){return c.type="throw",c.arg=I,g.next=C,A&&(g.method="next",g.arg=e),!!A}for(var A=this.tryEntries.length-1;A>=0;--A){var t=this.tryEntries[A],c=t.completion;if("root"===t.tryLoc)return C("end");if(t.tryLoc<=this.prev){var i=r.call(t,"catchLoc"),n=r.call(t,"finallyLoc");if(i&&n){if(this.prev<t.catchLoc)return C(t.catchLoc,!0);if(this.prev<t.finallyLoc)return C(t.finallyLoc)}else if(i){if(this.prev<t.catchLoc)return C(t.catchLoc,!0)}else{if(!n)throw new Error("try statement without catch or finally");if(this.prev<t.finallyLoc)return C(t.finallyLoc)}}}},abrupt:function(I,g){for(var C=this.tryEntries.length-1;C>=0;--C){var e=this.tryEntries[C];if(e.tryLoc<=this.prev&&r.call(e,"finallyLoc")&&this.prev<e.finallyLoc){var A=e;break}}A&&("break"===I||"continue"===I)&&A.tryLoc<=g&&g<=A.finallyLoc&&(A=null);var t=A?A.completion:{};return t.type=I,t.arg=g,A?(this.method="next",this.next=A.finallyLoc,B):this.complete(t)},complete:function(I,g){if("throw"===I.type)throw I.arg;return"break"===I.type||"continue"===I.type?this.next=I.arg:"return"===I.type?(this.rval=this.arg=I.arg,this.method="return",this.next="end"):"normal"===I.type&&g&&(this.next=g),B},finish:function(I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.finallyLoc===I)return this.complete(C.completion,C.afterLoc),w(C),B}},catch:function(I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.tryLoc===I){var e=C.completion;if("throw"===e.type){var A=e.arg;w(C)}return A}}throw new Error("illegal catch attempt")},delegateYield:function(I,g,C){return this.delegate={iterator:F(I),resultName:g,nextLoc:C},"next"===this.method&&(this.arg=e),B}},A}I.exports=C,I.exports.__esModule=!0,I.exports.default=I.exports}(R);var H=(0,R.exports)();try{regeneratorRuntime=H}catch(I){"object"==typeof globalThis?globalThis.regeneratorRuntime=H:Function("r","regeneratorRuntime = r")(H)}function S(I){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(I){return typeof I}:function(I){return I&&"function"==typeof Symbol&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},S(I)}function J(I){var g=function(I,g){if("object"!==S(I)||null===I)return I;var C=I[Symbol.toPrimitive];if(void 0!==C){var e=C.call(I,g||"default");if("object"!==S(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===g?String:Number)(I)}(I,"string");return"symbol"===S(g)?g:String(g)}function k(I,g){for(var C=0;C<g.length;C++){var e=g[C];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(I,J(e.key),e)}}function w(I){return I<0?I>>>0:I}function f(I,g){for(var C=g;0!==I[C];)C++;return new TextDecoder("utf-8").decode(I.slice(g,C))}function F(I,g,C){var e=void 0===g?null:g,A=function(I,g){var C=atob(I);if(g){for(var e=new Uint8Array(C.length),A=0,t=C.length;A<t;++A)e[A]=C.charCodeAt(A);return String.fromCharCode.apply(null,new Uint16Array(e.buffer))}return C}(I,void 0!==C&&C),t=A.indexOf("\n",10)+1,r=A.substring(t)+(e?"//# sourceMappingURL="+e:""),c=new Blob([r],{type:"application/javascript"});return URL.createObjectURL(c)}(function(){function I(){!function(I,g){if(!(I instanceof g))throw new TypeError("Cannot call a class as a function")}(this,I),this._path=""}var g,C,e;return g=I,e=[{key:"getPtr",value:function(g){if(I._filePtrs.has(g))return I._filePtrs.get(g);throw new Error("File instance not found.")}},{key:"setPtr",value:function(g,C){I._filePtrs.set(g,C)}},{key:"removePtr",value:function(g){I._filePtrs.delete(g)}}],(C=[{key:"meta",get:function(){if(void 0!==this._meta)return Object.assign({version:0},this._meta)}},{key:"pageSize",get:function(){}}])&&k(g.prototype,C),e&&k(g,e),Object.defineProperty(g,"prototype",{writable:!1}),I}())._filePtrs=new Map;var v,Y,K,N,E,U=(v="",Y=null,K=!1,function(I){return N=N||F(v,Y,K),new Worker(N,I)});function M(I,g){if(!(I instanceof g))throw new TypeError("Cannot call a class as a function")}function L(I){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(I){return typeof I}:function(I){return I&&"function"==typeof Symbol&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},L(I)}function T(I){var g=function(I,g){if("object"!=L(I)||!I)return I;var C=I[Symbol.toPrimitive];if(void 0!==C){var e=C.call(I,g||"default");if("object"!=L(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===g?String:Number)(I)}(I,"string");return"symbol"==L(g)?g:String(g)}function Q(I,g){for(var C=0;C<g.length;C++){var e=g[C];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(I,T(e.key),e)}}function z(I,g,C){return g&&Q(I.prototype,g),C&&Q(I,C),Object.defineProperty(I,"prototype",{writable:!1}),I}function x(I,g,C){return(g=T(g))in I?Object.defineProperty(I,g,{value:C,enumerable:!0,configurable:!0,writable:!0}):I[g]=C,I}function _(I,g){var C="undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(!C){if(Array.isArray(I)||(C=function(I,g){if(!I)return;if("string"==typeof I)return P(I,g);var C=Object.prototype.toString.call(I).slice(8,-1);"Object"===C&&I.constructor&&(C=I.constructor.name);if("Map"===C||"Set"===C)return Array.from(I);if("Arguments"===C||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))return P(I,g)}(I))||g&&I&&"number"==typeof I.length){C&&(I=C);var e=0,A=function(){};return{s:A,n:function(){return e>=I.length?{done:!0}:{done:!1,value:I[e++]}},e:function(I){throw I},f:A}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,r=!0,c=!1;return{s:function(){C=C.call(I)},n:function(){var I=C.next();return r=I.done,I},e:function(I){c=!0,t=I},f:function(){try{r||null==C.return||C.return()}finally{if(c)throw t}}}}function P(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}!function(I){I[I.INIT=0]="INIT",I[I.ALLOC=1]="ALLOC",I[I.FREE=2]="FREE",I[I.COPY_TO_XPU=3]="COPY_TO_XPU",I[I.COPY_FROM_XPU=4]="COPY_FROM_XPU",I[I.MEMSET=5]="MEMSET",I[I.TIMER_START=6]="TIMER_START",I[I.TIMER_STOP=7]="TIMER_STOP",I[I.MATRIX_VECTOR_MULTIPLY=8]="MATRIX_VECTOR_MULTIPLY",I[I.SYNC_VECTOR=9]="SYNC_VECTOR"}(E||(E={}));var D=function(){function I(){M(this,I)}return z(I,null,[{key:"addXpu",value:function(g,C){I.xpuObjects.set(g,C)}},{key:"getXpu",value:function(g){return I.xpuObjects.get(g)}},{key:"hasXpu",value:function(g){return I.xpuObjects.has(g)}},{key:"removeXpu",value:function(g){if(I.xpuObjects.has(g)){var C,e=_(I.xpuObjects.get(g).deviceMem);try{for(e.s();!(C=e.n()).done;){var A=C.value;I.memoryObjects.delete(A)}}catch(I){e.e(I)}finally{e.f()}I.xpuObjects.delete(g)}}},{key:"addMemory",value:function(g,C){I.memoryObjects.set(g,C),I.xpuObjects.get(C.objAddress).deviceMem.add(g)}},{key:"getMemory",value:function(g){return I.memoryObjects.get(g)}},{key:"hasMemory",value:function(g){return I.memoryObjects.has(g)}},{key:"removeMemory",value:function(g){I.hasMemory(g)&&I.xpuObjects.get(I.getMemory(g).objAddress).deviceMem.delete(g),I.memoryObjects.delete(g)}},{key:"getUniquePointer",value:function(){for(;;){var I=Math.ceil(1e3*(performance.now()+Math.random()));if(!this.uniquePointers.has(I))return this.uniquePointers.add(I),I}}},{key:"removeUniquePointer",value:function(I){this.uniquePointers.has(I)&&this.uniquePointers.delete(I)}}]),I}();function O(C){return function(g){if(Array.isArray(g))return I(g)}(C)||function(I){if("undefined"!=typeof Symbol&&null!=I[Symbol.iterator]||null!=I["@@iterator"])return Array.from(I)}(C)||g(C)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function j(I,g){var C="undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(!C){if(Array.isArray(I)||(C=function(I,g){if(!I)return;if("string"==typeof I)return q(I,g);var C=Object.prototype.toString.call(I).slice(8,-1);"Object"===C&&I.constructor&&(C=I.constructor.name);if("Map"===C||"Set"===C)return Array.from(I);if("Arguments"===C||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))return q(I,g)}(I))||g&&I&&"number"==typeof I.length){C&&(I=C);var e=0,A=function(){};return{s:A,n:function(){return e>=I.length?{done:!0}:{done:!1,value:I[e++]}},e:function(I){throw I},f:A}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,r=!0,c=!1;return{s:function(){C=C.call(I)},n:function(){var I=C.next();return r=I.done,I},e:function(I){c=!0,t=I},f:function(){try{r||null==C.return||C.return()}finally{if(c)throw t}}}}function q(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}x(D,"xpuObjects",new Map),x(D,"memoryObjects",new Map),x(D,"uniquePointers",new Set);var $=new Map;function II(I){return $.has(I)||$.set(I,function(){for(var I="BCDEF".split(""),g="#",C=0;C<6;C++)g+=I[Math.floor(Math.random()*I.length)];return g}()),$.get(I)}var gI=function(){function I(){M(this,I),x(this,"_names",new Map),x(this,"_paths",void 0),x(this,"_stack",void 0),x(this,"_enabled",void 0),x(this,"_memory",null),this._paths=new Map,this._stack=[],this._enabled=!1}var g;return z(I,[{key:"addName",value:function(I,g){this._names.set(I,g)}},{key:"getName",value:function(I){return this._names.get(I)}},{key:"enabled",get:function(){return this._enabled},set:function(I){this._enabled=I}},{key:"memory",get:function(){return this._memory},set:function(I){this._memory=I}},{key:"graphify",value:function(I,g,C,e){var t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=I.name,c=this;function i(){return i=A(o.mark((function A(){var i,n,l,s,d,a,b,Z=arguments;return o.wrap((function(A){for(;;)switch(A.prev=A.next){case 0:for(i=Z.length,n=new Array(i),l=0;l<i;l++)n[l]=Z[l];if(c.memory&&void 0!==t&&(new Int32Array(c.memory.buffer)[n[n.length-1]/Int32Array.BYTES_PER_ELEMENT]=t),c.enabled){A.next=6;break}return A.next=5,I.apply(I,n);case 5:return A.abrupt("return");case 6:s=g.map((function(I){return n[I]})),d=C>=0?n[C]:C,a=e?n[e]:void 0,(b=new CI(r,I,n)).inputsAddr=s,b.output=d,b.subName=c.getName(a),"pvXpuDeviceMemFree"===r||"pvXpuGraphifiedFree"===r?c.addFreeNode(b,s[0]):c.addNode(b,s);case 14:case"end":return A.stop()}}),A)}))),i.apply(this,arguments)}return function(){return i.apply(this,arguments)}}},{key:"addNode",value:function(I,g){this._stack.push(I),this._paths.has(I)||this._paths.set(I,new Set);var C,e=j(g);try{for(e.s();!(C=e.n()).done;)for(var A=C.value,t=this._stack.length-2;t>=0;t--){var r=this._stack[t];if(r.output===A){this._paths.get(r).add(I),I.inputs.add(r);break}}}catch(I){e.e(I)}finally{e.f()}}},{key:"addFreeNode",value:function(I,g){this._stack.push(I),this._paths.has(I)||this._paths.set(I,new Set);for(var C=this._stack.length-2;C>=0;C--){var e=this._stack[C];if(e.inputsAddr.includes(g)){this._paths.get(e).add(I),I.inputs.add(e);break}}}},{key:"executeHelper",value:function(I){var g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(I.numVisited++,I.level=Math.max(g,I.level),!(I.numVisited<I.inputs.size||I.visited)){I.visited=!0,I.runOnce();var C,e=j(this._paths.get(I));try{for(e.s();!(C=e.n()).done;){var A=C.value;this.executeHelper(A,I.level+1)}}catch(I){e.e(I)}finally{e.f()}}}},{key:"execute",value:(g=A(o.mark((function I(){var g,C,e,A,t,r,c,i,n,l,s=this;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:for(CI.tick=performance.now(),g=this._stack.filter((function(I){return 0===I.inputs.size})),C=[];g.length>0;)C.push(g.splice(0,8));e=0,A=C;case 5:if(!(e<A.length)){I.next=15;break}t=A[e],r=[],c=j(t);try{for(c.s();!(i=c.n()).done;)n=i.value,this.executeHelper(n),r.push(n.executionPromise)}catch(I){c.e(I)}finally{c.f()}return I.next=12,Promise.all(r);case 12:e++,I.next=5;break;case 15:return l=new Promise((function(I){Promise.all(s._stack.map((function(I){return I.executionPromise}))).then((function(){I()}))})),I.next=18,l;case 18:this.clear();case 19:case"end":return I.stop()}}),I,this)}))),function(){return g.apply(this,arguments)})},{key:"generateViz",value:function(){var I,g="",e="",A=j(this._paths);try{for(A.s();!(I=A.n()).done;){var t=C(I.value,2),r=t[0],c=t[1];g+="  ".concat(r.id," [label=<[").concat(r.id,"] ").concat(r.name).concat(r.subName?" ("+r.subName+")":"",'<BR /><FONT POINT-SIZE="10">wait: ').concat(r.timeWait.toFixed(4),", execute: ").concat(r.timeExecute.toFixed(4),'</FONT>>, style=filled, fillcolor="').concat(II(r.level),'"]\n');var i,n=j(c);try{for(n.s();!(i=n.n()).done;){var l=i.value;e+="  ".concat(r.id," -> ").concat(l.id,"\n")}}catch(I){n.e(I)}finally{n.f()}}}catch(I){A.e(I)}finally{A.f()}var o="digraph {\n".concat(g,"\n").concat(e,"}");console.log(o)}},{key:"clear",value:function(){this._paths.clear(),this._stack=[],CI.reset()}}]),I}(),CI=function(){function I(g,C,e){M(this,I),x(this,"id",void 0),x(this,"name",void 0),x(this,"subName",void 0),x(this,"visited",void 0),x(this,"numVisited",void 0),x(this,"executionPromise",void 0),x(this,"inputs",void 0),x(this,"inputsAddr",void 0),x(this,"output",void 0),x(this,"timeWait",0),x(this,"timeExecute",0),x(this,"level",0),x(this,"_fn",void 0),x(this,"_args",void 0),this.id=I.nodeId++,this.name=g,this.visited=!1,this.numVisited=0,this.inputs=new Set,this.inputsAddr=[],this.output=-1,this._fn=C,this._args=e}var g;return z(I,[{key:"runOnce",value:function(){var g=this;if(void 0===this.executionPromise){var C=O(this.inputs).map((function(I){return I.executionPromise}));this.executionPromise=Promise.all(C).then(A(o.mark((function C(){var e,A,t;return o.wrap((function(C){for(;;)switch(C.prev=C.next){case 0:return e=performance.now(),g.timeWait=(e-I.tick)/1e3,A=performance.now(),C.next=5,g._fn.apply(null,g._args);case 5:return t=C.sent,e=performance.now(),g.timeExecute=(e-A)/1e3,C.abrupt("return",t);case 9:case"end":return C.stop()}}),C)}))))}}},{key:"runFn",value:(g=A(o.mark((function I(){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return I.next=2,this._fn.apply(null,this._args);case 2:case"end":return I.stop()}}),I,this)}))),function(){return g.apply(this,arguments)})}],[{key:"reset",value:function(){I.nodeId=0}}]),I}();function eI(I,g){var C=Object.keys(I);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(I);g&&(e=e.filter((function(g){return Object.getOwnPropertyDescriptor(I,g).enumerable}))),C.push.apply(C,e)}return C}function AI(I){for(var g=1;g<arguments.length;g++){var C=null!=arguments[g]?arguments[g]:{};g%2?eI(Object(C),!0).forEach((function(g){x(I,g,C[g])})):Object.getOwnPropertyDescriptors?Object.defineProperties(I,Object.getOwnPropertyDescriptors(C)):eI(Object(C)).forEach((function(g){Object.defineProperty(I,g,Object.getOwnPropertyDescriptor(C,g))}))}return I}x(CI,"nodeId",0),x(CI,"executeWasmFn",void 0),x(CI,"tick",0);var tI,rI=function(){function I(g){var C=this;M(this,I),x(this,"worker",void 0),x(this,"listeners",{}),this.worker=g,this.worker.onmessage=function(I){switch(I.data.command){case"ok":I.data.workId in C.listeners&&(C.listeners[I.data.workId](I.data.result),C.removeListener(I.data.workId));break;case"failed":case"error":throw C.removeListener(I.data.workId),new Error(I.data.message);default:throw C.removeListener(I.data.workId),new Error("Unrecognized command: ".concat(I.data.command))}}}return z(I,[{key:"postMessage",value:function(I,g){this.worker.postMessage(I,g)}},{key:"terminate",value:function(){this.worker.terminate()}},{key:"addListener",value:function(I,g){this.listeners[I]=g}},{key:"removeListener",value:function(I){delete this.listeners[I]}}]),I}(),cI=function(I,g,C){var e=Math.ceil(1e10*(performance.now()+Math.random())),A=function(I,g){return new Promise((function(C){g.addListener(I,(function(I){C(I)}))}))}(e,I);return I.postMessage(AI(AI({},g),{},{workId:e}),C),A};!function(I){I[I.ATTENTION_PRECOMPUTE_ENCODING=200]="ATTENTION_PRECOMPUTE_ENCODING",I[I.ATTENTION_ATTEND_COMBINED=201]="ATTENTION_ATTEND_COMBINED"}(tI||(tI={}));var iI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},t=function(){var I=A(o.mark((function I(g,C,A,t,r,c){var i;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),C=w(C),c=w(c),i=D.getXpu(g)){I.next=7;break}return e(c,-1),I.abrupt("return");case 7:return I.next=9,cI(i.workers[0],{action:tI.ATTENTION_PRECOMPUTE_ENCODING,encodingAddress:C,dimension:A,steps:t,theta:r});case 9:e(c,0);case 10:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r){return I.apply(this,arguments)}}(),r=function(){var g=A(o.mark((function g(C,A,t,r,c,i,n,l,s,d,a,b,Z,m,u,B,y,G,V,W,h,R){var p,X,H,S,J,k,f;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=w(C),l=w(l),s=w(s),d=w(d),a=w(a),b=w(b),Z=w(Z),m=w(m),u=w(u),B=w(B),y=w(y),V=w(V),h=w(h),R=w(R),p=D.getXpu(C)){g.next=18;break}return e(R,-1),g.abrupt("return");case 18:return X=new Float32Array(I.buffer),H=W*A*c,S=X.slice(s/Float32Array.BYTES_PER_ELEMENT,s/Float32Array.BYTES_PER_ELEMENT+H),J=X.slice(d/Float32Array.BYTES_PER_ELEMENT,d/Float32Array.BYTES_PER_ELEMENT+H),k=X.slice(a/Float32Array.BYTES_PER_ELEMENT,a/Float32Array.BYTES_PER_ELEMENT+H),g.next=25,cI(p.workers[0],{action:tI.ATTENTION_ATTEND_COMBINED,numHeads:A,numKvHeads:t,windowLength:r,headDimension:c,ropeDimension:i,ropeInterleaved:n,newEncodingAddress:l,qBuffer:S,kBuffer:J,vBuffer:k,keysAddress:b,keyInterceptsAddress:Z,keySlopesAddress:m,valuesAddress:u,valueInterceptsAddress:B,valueSlopesAddress:y,position:G,queryAddress:V,n:W},[S.buffer,J.buffer,k.buffer]);case 25:f=g.sent,(X=new Float32Array(I.buffer)).set(f,h/Float32Array.BYTES_PER_ELEMENT);case 28:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c,i,n,l,o,s,d,a,b,Z,m,u,B,y,G,V){return g.apply(this,arguments)}}();return{pv_picollm_attention_precompute_encoding_web_worker_wasm:t,pv_picollm_attention_attend_combined_web_worker_wasm:g.graphify(r,[7,8,9,10,11,14,18,20],20)}};x(x({},tI.ATTENTION_PRECOMPUTE_ENCODING,(function(I){var g=I.globals,C=g.exports,e=g.memAlloc,A=I.encodingAddress,t=I.dimension,r=I.steps,c=I.theta;(0,C.pv_picollm_attention_precompute_encoding_wasm)(e.get(A).workerMemAddress,t,r,c)})),tI.ATTENTION_ATTEND_COMBINED,(function(I){var g=I.globals,C=g.exports,e=g.memAlloc,A=g.memory,t=I.numHeads,r=I.numKvHeads,c=I.windowLength,i=I.headDimension,n=I.ropeDimension,l=I.ropeInterleaved,o=I.newEncodingAddress,s=I.qBuffer,d=I.kBuffer,a=I.vBuffer,b=I.keysAddress,Z=I.keyInterceptsAddress,m=I.keySlopesAddress,u=I.valuesAddress,B=I.valueInterceptsAddress,y=I.valueSlopesAddress,G=I.position,V=I.queryAddress,W=I.n,h=C.aligned_alloc,R=C.free,p=C.pv_picollm_attention_encode_wasm,X=C.pv_picollm_attention_update_keys_wasm,H=C.pv_picollm_attention_update_values_wasm,S=C.pv_picollm_attention_transpose_query_wasm,J=C.pv_picollm_attention_attend_wasm,k=e.get(o).workerMemAddress,w=e.get(b).workerMemAddress,f=e.get(Z).workerMemAddress,F=e.get(m).workerMemAddress,v=e.get(u).workerMemAddress,Y=e.get(B).workerMemAddress,K=e.get(y).workerMemAddress,N=e.get(V).workerMemAddress,E=h(Float32Array.BYTES_PER_ELEMENT,s.length*Float32Array.BYTES_PER_ELEMENT),U=h(Float32Array.BYTES_PER_ELEMENT,d.length*Float32Array.BYTES_PER_ELEMENT),M=h(Float32Array.BYTES_PER_ELEMENT,a.length*Float32Array.BYTES_PER_ELEMENT),L=t*i*W,T=h(Float32Array.BYTES_PER_ELEMENT,L*Float32Array.BYTES_PER_ELEMENT),Q=new Float32Array(A.buffer);Q.set(s,E/Float32Array.BYTES_PER_ELEMENT),Q.set(d,U/Float32Array.BYTES_PER_ELEMENT),Q.set(a,M/Float32Array.BYTES_PER_ELEMENT),Q.fill(0,T/Float32Array.BYTES_PER_ELEMENT,T/Float32Array.BYTES_PER_ELEMENT+L),p(E,k,W,t,l,i,n,G),S(W,E,N,t,i),p(U,k,W,r,l,i,n,G),X(r,c,i,w,f,F,G,W,U),H(r,c,i,v,Y,K,G,W,M),J(t,r,c,i,w,f,F,v,Y,K,G,N,W,T);var z=(Q=new Float32Array(A.buffer)).slice(T/Float32Array.BYTES_PER_ELEMENT,T/Float32Array.BYTES_PER_ELEMENT+L);return R(E),R(U),R(M),R(T),z}));var nI,lI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},t=function(){var I=A(o.mark((function I(g,A,t,r){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),t=w(t),r=w(r),D.getXpu(g)){I.next=7;break}return e(r,-1),I.abrupt("return");case 7:return I.next=9,C.pv_picollm_feed_forward_silu_wasm(A,t);case 9:case"end":return I.stop()}}),I)})));return function(g,C,e,A){return I.apply(this,arguments)}}(),r=function(){var I=A(o.mark((function I(g,A,t,r){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),t=w(t),r=w(r),D.getXpu(g)){I.next=7;break}return e(r,-1),I.abrupt("return");case 7:return I.next=9,C.pv_picollm_feed_forward_gelu_wasm(A,t);case 9:case"end":return I.stop()}}),I)})));return function(g,C,e,A){return I.apply(this,arguments)}}(),c=function(){var I=A(o.mark((function I(g,e,A,t){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),A=w(A),D.getXpu(g)){I.next=6;break}return I.abrupt("return");case 6:return I.next=8,C.pv_picollm_feed_forward_almost_gelu_wasm(e,A);case 8:case"end":return I.stop()}}),I)})));return function(g,C,e,A){return I.apply(this,arguments)}}(),i=function(){var I=A(o.mark((function I(g,A,t,r,c){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),t=w(t),r=w(r),c=w(c),D.getXpu(g)){I.next=8;break}return e(c,-1),I.abrupt("return");case 8:return I.next=10,C.pv_picollm_feed_forward_multiply_buffers_wasm(A,t,r);case 10:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t){return I.apply(this,arguments)}}();return{pv_picollm_feed_forward_silu_web_worker_wasm:g.graphify(t,[2],2),pv_picollm_feed_forward_gelu_web_worker_wasm:g.graphify(r,[2],2),pv_picollm_feed_forward_almost_gelu_web_worker_wasm:g.graphify(c,[2],2),pv_picollm_feed_forward_multiply_buffers_web_worker_wasm:g.graphify(i,[2,3],3)}},oI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},t=function(){var I=A(o.mark((function I(g,A,t,r,c,i,n,l){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),c=w(c),i=w(i),n=w(n),l=w(l),D.getXpu(g)){I.next=9;break}return e(l,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_gate_forward_wasm(A,t,r,c,i,n);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i){return I.apply(this,arguments)}}();return{pv_picollm_gate_forward_web_worker_wasm:g.graphify(t,[],6)}},sI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},t=function(){var I=A(o.mark((function I(g,A,t,r,c){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),t=w(t),r=w(r),c=w(c),D.getXpu(g)){I.next=8;break}return e(c,-1),I.abrupt("return");case 8:return I.next=10,C.pv_picollm_moe_transformer_add_to_buffer_wasm(A,t,r);case 10:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t){return I.apply(this,arguments)}}(),r=function(){var I=A(o.mark((function I(g,A,t,r,c,i,n,l){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),c=w(c),i=w(i),n=w(n),l=w(l),D.getXpu(g)){I.next=9;break}return e(l,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_moe_transformer_multiply_weight_and_add_to_buffer_wasm(A,t,r,c,i,n);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i){return I.apply(this,arguments)}}(),c=function(){var I=A(o.mark((function I(g,A,t,r,c,i){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),t=w(t),r=w(r),c=w(c),i=w(i),D.getXpu(g)){I.next=9;break}return e(i,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_moe_transformer_add_buffers_wasm(A,t,r,c);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r){return I.apply(this,arguments)}}();return{pv_picollm_moe_transformer_add_to_buffer_web_worker_wasm:g.graphify(t,[2],3),pv_picollm_moe_transformer_multiply_weight_and_add_to_buffer_web_worker_wasm:g.graphify(r,[5],6),pv_picollm_moe_transformer_add_buffers_web_worker_wasm:g.graphify(c,[2,3],4)}},dI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},t=function(){var I=A(o.mark((function I(g,A,t,r,c,i,n,l,s,d){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),r=w(r),n=w(n),s=w(s),d=w(d),D.getXpu(g)){I.next=9;break}return e(d,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_norm_forward_wasm(A,t,r,c,n+i,s+l);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i,n,l){return I.apply(this,arguments)}}();return{pv_picollm_norm_forward_web_worker_wasm:g.graphify(t,[6],8)}},aI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},t=function(){var I=A(o.mark((function I(g,A,t,r,c,i,n,l,s,d,a){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),r=w(r),c=w(c),l=w(l),d=w(d),a=w(a),D.getXpu(g)){I.next=10;break}return e(a,-1),I.abrupt("return");case 10:return I.next=12,C.pv_picollm_norm_layer_forward_wasm(A,t,r,c,i,l+n,d+s);case 12:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i,n,l,o){return I.apply(this,arguments)}}();return{pv_picollm_norm_layer_forward_web_worker_wasm:g.graphify(t,[7,9],9)}},bI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},t=function(){var I=A(o.mark((function I(g,A,t,r,c){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),t=w(t),r=w(r),c=w(c),D.getXpu(g)){I.next=8;break}return e(c,-1),I.abrupt("return");case 8:return I.next=10,C.pv_picollm_transformer_add_to_buffer_wasm(A,t,r);case 10:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t){return I.apply(this,arguments)}}(),r=function(){var I=A(o.mark((function I(g,A,t,r,c,i){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),t=w(t),r=w(r),c=w(c),i=w(i),D.getXpu(g)){I.next=9;break}return e(i,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_transformer_add_buffers_wasm(A,t,r,c);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r){return I.apply(this,arguments)}}();return{pv_picollm_transformer_add_to_buffer_web_worker_wasm:g.graphify(t,[2,3],3),pv_picollm_transformer_add_buffers_web_worker_wasm:g.graphify(r,[2,3],4)}};function ZI(I,g){var C="undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(!C){if(Array.isArray(I)||(C=function(I,g){if(!I)return;if("string"==typeof I)return mI(I,g);var C=Object.prototype.toString.call(I).slice(8,-1);"Object"===C&&I.constructor&&(C=I.constructor.name);if("Map"===C||"Set"===C)return Array.from(I);if("Arguments"===C||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))return mI(I,g)}(I))||g&&I&&"number"==typeof I.length){C&&(I=C);var e=0,A=function(){};return{s:A,n:function(){return e>=I.length?{done:!0}:{done:!1,value:I[e++]}},e:function(I){throw I},f:A}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,r=!0,c=!1;return{s:function(){C=C.call(I)},n:function(){var I=C.next();return r=I.done,I},e:function(I){c=!0,t=I},f:function(){try{r||null==C.return||C.return()}finally{if(c)throw t}}}}function mI(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}function uI(I){return I|=I>>1,I|=I>>2,I|=I>>4,I|=I>>8,I|=I>>16,(I|=I>>32)-(I>>1)}function BI(I,g){var C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;void 0===g&&(g=I,I=0);for(var e=[],A=I;C>0?A<g:A>g;A+=C)e.push(A);return e}!function(I){I[I.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BLOCKS=100]="WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BLOCKS",I[I.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_METAS=101]="WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_METAS",I[I.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BIAS=102]="WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BIAS",I[I.WEIGHT_BLOCK_MIXED_16X8_FORWARD_SINGLE=103]="WEIGHT_BLOCK_MIXED_16X8_FORWARD_SINGLE",I[I.WEIGHT_BLOCK_MIXED_16X8_FORWARD_MULTIPLE=104]="WEIGHT_BLOCK_MIXED_16X8_FORWARD_MULTIPLE"}(nI||(nI={}));var yI=function(I,g,e){var t=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},r=function(){var e=A(o.mark((function e(A,r,c,i,n,l,s,d,a){var b,Z,m,u,B,y,G,V,W,h,R,p,X,H,S,J,k,F,v,Y,K,N,E,U,M,L,T,Q,z,x,_,P;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(A=w(A),r=w(r),c=w(c),n=w(n),l=w(l),s=w(s),d=w(d),a=w(a),b=D.getXpu(A)){e.next=12;break}return t(a,-1),e.abrupt("return");case 12:for(Z=new Uint8Array(I.buffer),m=f(Z,r),g.addName(s,m),u=new Int32Array(I.buffer),B=u.slice(c/Int32Array.BYTES_PER_ELEMENT,c/Int32Array.BYTES_PER_ELEMENT+2),y=u.slice(n/Int32Array.BYTES_PER_ELEMENT,n/Int32Array.BYTES_PER_ELEMENT+i),G=u.slice(l/Int32Array.BYTES_PER_ELEMENT,l/Int32Array.BYTES_PER_ELEMENT+i),V=[],W=0,h=0;h<i;h++)R=h===i-1?B[1]/8:G[h+1],p=(R-G[h])*y[h]*B[0],V.push([W,p]),W+=p;X=W,H=new Uint8Array(I.buffer).slice(s,s+X),S=[],b.numWorkers<4?(J=uI(b.numWorkers),S=BI(b.numWorkers-J,b.numWorkers)):(k=uI((b.numWorkers-1)*(2/3)),F=uI((b.numWorkers-1)*(1/3)),v=b.numWorkers-1-k-F,S=m.includes("ff")||X>1024e4?BI(1,1+k):BI(1+k,1+k+F),v>0&&m.includes("att.v")&&(v>=F?S=BI(1+k+F,1+k+2*F):F===v+1&&(S=[0].concat(O(BI(1+k+F,k+2*F)))))),Y=Math.ceil(X/S.length),K=X/Y,B[0]/=K,N=[],E=X,U=0;case 32:if(!(U<S.length)){e.next=44;break}M=new Uint8Array(Y),L=0,T=ZI(V);try{for(T.s();!(Q=T.n()).done;)z=C(Q.value,2),x=z[0],_=z[1],P=U*(_/K),M.set(H.slice(x+P,x+P+_/K),L),L+=_/K}catch(I){T.e(I)}finally{T.f()}if(E-=L,N.push(cI(b.workers[S[U]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BLOCKS,shape:B,bitDepths:y,bitDepthStarts:G,numBlockBytes:Y,blocksAddress:d,block:M},[M.buffer])),!(E<=0)){e.next=41;break}return e.abrupt("break",44);case 41:U++,e.next=32;break;case 44:return e.next=46,Promise.all(N);case 46:t(a,0),D.addMemory(d,{objAddress:A,memFlag:0,allocSize:X,chunkSize:Y,workerSet:S});case 48:case"end":return e.stop()}}),e)})));return function(I,g,C,A,t,r,c,i,n){return e.apply(this,arguments)}}(),c=function(){var g=A(o.mark((function g(e,A,r,c,i,n,l,s){var d,a,b,Z,m,u,B,y,G,V,W,h,R,p,X,H,S,J,k,f,F,v,Y,K,N;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(e=w(e),A=w(A),c=w(c),i=w(i),n=w(n),l=w(l),s=w(s),d=D.getXpu(e)){g.next=11;break}return t(s,-1),g.abrupt("return");case 11:if(a=D.getMemory(i)){g.next=15;break}return t(s,-1),g.abrupt("return");case 15:for(b=new Int32Array(I.buffer),Z=b.slice(A/Int32Array.BYTES_PER_ELEMENT,A/Int32Array.BYTES_PER_ELEMENT+2),m=b.slice(c/Int32Array.BYTES_PER_ELEMENT,c/Int32Array.BYTES_PER_ELEMENT+r),u=[],B=0,y=0;y<r;y++)G=y===r-1?Z[1]/8:m[y+1],V=2*(G-m[y])*(Z[0]/16),u.push([B,V]),B+=V;W=B,h=Math.ceil(W/a.workerSet.length),R=W/h,p=new Uint16Array(I.buffer).slice(n/Uint16Array.BYTES_PER_ELEMENT,n/Uint16Array.BYTES_PER_ELEMENT+W),X=[],H=W,S=0;case 28:if(!(S<a.workerSet.length)){g.next=40;break}J=new Uint16Array(h),k=0,f=ZI(u);try{for(f.s();!(F=f.n()).done;)v=C(F.value,2),Y=v[0],K=v[1],N=S*(K/R),J.set(p.slice(Y+N,Y+N+K/R),k),k+=K/R}catch(I){f.e(I)}finally{f.f()}if(H-=k,X.push(cI(d.workers[a.workerSet[S]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_METAS,memAddress:l,metas:J},[J.buffer])),!(H<=0)){g.next=37;break}return g.abrupt("break",40);case 37:S++,g.next=28;break;case 40:return g.next=42,Promise.all(X);case 42:t(s,0),D.addMemory(l,{objAddress:e,memFlag:0,allocSize:W*Uint16Array.BYTES_PER_ELEMENT,chunkSize:h,workerSet:a.workerSet});case 44:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c,i){return g.apply(this,arguments)}}(),i=function(){var g=A(o.mark((function g(C,e,A,r,c,i){var n,l,s,d,a,b,Z,m,u,B,y;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=w(C),e=w(e),A=w(A),r=w(r),c=w(c),i=w(i),n=D.getXpu(C)){g.next=10;break}return t(i,-1),g.abrupt("return");case 10:if(l=D.getMemory(A)){g.next=14;break}return t(i,-1),g.abrupt("return");case 14:s=new Int32Array(I.buffer),d=s.slice(e/Int32Array.BYTES_PER_ELEMENT,e/Int32Array.BYTES_PER_ELEMENT+2),a=d[0],b=new Float32Array(I.buffer).slice(r/Float32Array.BYTES_PER_ELEMENT,r/Float32Array.BYTES_PER_ELEMENT+a),Z=Math.ceil(a/l.workerSet.length),m=[],u=a,B=0;case 22:if(!(B<l.workerSet.length)){g.next=31;break}if(y=b.slice(B*Z,(B+1)*Z),m.push(cI(n.workers[l.workerSet[B]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BIAS,memAddress:c,bias:y},[y.buffer])),!((u-=Z)<=0)){g.next=28;break}return g.abrupt("break",31);case 28:B++,g.next=22;break;case 31:return g.next=33,Promise.all(m);case 33:t(i,0),D.addMemory(c,{objAddress:C,memFlag:0,allocSize:a*Float32Array.BYTES_PER_ELEMENT,chunkSize:Z,workerSet:l.workerSet});case 35:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r){return g.apply(this,arguments)}}(),n=function(){var g=A(o.mark((function g(C,e,A,r,c,i,n,l,s,d,a,b,Z){var m,u,B,y,G,V,W,h,R,p,X,H,S,J,k,f,F,v,Y;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=w(C),e=w(e),A=w(A),c=w(c),i=w(i),n=w(n),l=w(l),d=w(d),a=w(a),b=w(b),Z=w(Z),m=D.getXpu(C)){g.next=15;break}return t(Z,-1),g.abrupt("return");case 15:if(u=D.getMemory(l)){g.next=19;break}return t(Z,-1),g.abrupt("return");case 19:if(B=D.getMemory(n)){g.next=23;break}return t(Z,-1),g.abrupt("return");case 23:if(y=D.getMemory(d)){g.next=27;break}return t(Z,-1),g.abrupt("return");case 27:if(D.getMemory(a)){g.next=31;break}return t(Z,-1),g.abrupt("return");case 31:for(G=new Float32Array(I.buffer),V=new Int32Array(I.buffer),W=V.slice(e/Int32Array.BYTES_PER_ELEMENT,e/Int32Array.BYTES_PER_ELEMENT+2),h=V.slice(c/Int32Array.BYTES_PER_ELEMENT,c/Int32Array.BYTES_PER_ELEMENT+r),R=V.slice(i/Int32Array.BYTES_PER_ELEMENT,i/Int32Array.BYTES_PER_ELEMENT+r),p=G.slice(d/Float32Array.BYTES_PER_ELEMENT,(d+y.allocSize)/Float32Array.BYTES_PER_ELEMENT),B.allocSize,Uint16Array.BYTES_PER_ELEMENT,X=u.chunkSize,H=u.allocSize,S=H/X,W[0]/=S,J=[],k=0;k<u.workerSet.length;k++)J.push(cI(m.workers[u.workerSet[k]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_FORWARD_SINGLE,shape:W,indicesAddress:A,bitDepthStarts:h,bitDepths:R,metasAddress:n,blocksAddress:l,xOffset:s,xAddress:d,xBuffer:p,biasAddress:b}));return g.next=45,Promise.all(J);case 45:for(f=g.sent,F=new Float32Array(W[0]*S),v=0;v<f.length;v++)Y=new Float32Array(f[v].buffer),F.set(Y,v*Y.length);G.set(F,a/Float32Array.BYTES_PER_ELEMENT);case 49:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c,i,n,l,o,s,d){return g.apply(this,arguments)}}(),l=function(){var g=A(o.mark((function g(C,e,A,r,c,i,n,l,s,d,a,b,Z,m){var u,B,y,G,V,W,h,R,p,X,H,S,J,k,f,F,v,Y,K,N,E,U;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=w(C),e=w(e),A=w(A),c=w(c),i=w(i),n=w(n),l=w(l),a=w(a),b=w(b),Z=w(Z),m=w(m),u=D.getXpu(C)){g.next=15;break}return t(m,-1),g.abrupt("return");case 15:if(B=D.getMemory(l)){g.next=19;break}return t(m,-1),g.abrupt("return");case 19:if(y=D.getMemory(n)){g.next=23;break}return t(m,-1),g.abrupt("return");case 23:if(D.getMemory(b)){g.next=27;break}return t(m,-1),g.abrupt("return");case 27:if(G=D.getMemory(a)){g.next=31;break}return t(m,-1),g.abrupt("return");case 31:for(V=new Float32Array(I.buffer),W=new Int32Array(I.buffer),h=W.slice(e/Int32Array.BYTES_PER_ELEMENT,e/Int32Array.BYTES_PER_ELEMENT+2),R=W.slice(c/Int32Array.BYTES_PER_ELEMENT,c/Int32Array.BYTES_PER_ELEMENT+r),p=W.slice(i/Int32Array.BYTES_PER_ELEMENT,i/Int32Array.BYTES_PER_ELEMENT+r),X=V.slice(a/Float32Array.BYTES_PER_ELEMENT,(a+G.allocSize)/Float32Array.BYTES_PER_ELEMENT),y.allocSize,Uint16Array.BYTES_PER_ELEMENT,H=B.chunkSize,S=B.allocSize,J=S/H,h[0]/=J,k=[],f=0;f<B.workerSet.length;f++)k.push(cI(u.workers[B.workerSet[f]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_FORWARD_MULTIPLE,shape:h,indicesAddress:A,bitDepthStarts:R,bitDepths:p,metasAddress:n,blocksAddress:l,n:s,xOffset:d,xAddress:a,xBuffer:X,biasAddress:Z}));return g.next=45,Promise.all(k);case 45:for(F=g.sent,v=new Float32Array(h[0]*J*s),Y=0,K=0;K<F.length;K++){for(N=new Float32Array(F[K].buffer),E=0,U=0;U<s;U++)v.set(N.slice(E,E+h[0]),E*J+Y),E+=h[0];Y+=h[0]}V.set(v,b/Float32Array.BYTES_PER_ELEMENT);case 50:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c,i,n,l,o,s,d,a){return g.apply(this,arguments)}}(),s=function(){var I=A(o.mark((function I(g,C,A,r,c,i,n,l,s){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),c=w(c),n=w(n),l=w(l),s=w(s),D.getXpu(g)){I.next=9;break}return t(s,-1),I.abrupt("return");case 9:return I.next=11,e.pv_picollm_weight_float_forward_wasm(C,A,r,c,n+i,l);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i,n){return I.apply(this,arguments)}}();return{pv_picollm_weight_block_mixed_16x8_preprocess_blocks_web_worker_wasm:r,pv_picollm_weight_block_mixed_16x8_preprocess_metas_web_worker_wasm:c,pv_picollm_weight_block_mixed_16x8_preprocess_bias_web_worker_wasm:i,pv_picollm_weight_block_mixed_16x8_forward_single_web_worker_wasm:g.graphify(n,[9,10],10,7),pv_picollm_weight_block_mixed_16x8_forward_multiple_web_worker_wasm:g.graphify(l,[10,11],11,7),pv_picollm_weight_float_forward_web_worker_wasm:g.graphify(s,[6,7],7)}},GI=function(){var I=A(o.mark((function I(g){var C,e,A,t,r,c,i,n,l,s,d,a,b,Z,m,u,B,y,G;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:C=g.globals,e=C.exports,A=C.memAlloc,t=C.memory,r=g.shape,c=g.bitDepths,i=g.bitDepthStarts,n=g.numBlockBytes,l=g.blocksAddress,s=g.block,d=e.aligned_alloc,a=e.free,b=e.pv_picollm_weight_block_mixed_16x8_preprocess_blocks,(Z=d(Uint8Array.BYTES_PER_ELEMENT,n*Uint8Array.BYTES_PER_ELEMENT))&&(A.set(l,{allocSize:n,workerMemAddress:Z}),m=d(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*r.length),u=d(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*c.length),B=d(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*i.length),y=new Uint8Array(t.buffer),G=new Int32Array(t.buffer),y.set(s,Z),G.set(r,m/Int32Array.BYTES_PER_ELEMENT),G.set(c,u/Int32Array.BYTES_PER_ELEMENT),G.set(i,B/Int32Array.BYTES_PER_ELEMENT),b(m,c.length,u,B,Z),a(m),a(u),a(B));case 5:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),VI=function(){var I=A(o.mark((function I(g){var C,e,A,t,r,c,i,n,l,s,d,a,b,Z,m,u,B,y,G,V,W,h,R,p,X,H,S,J,k,w,f,F,v,Y,K;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.globals,e=C.exports,A=C.memAlloc,t=C.memory,r=g.shape,c=g.indicesAddress,i=g.bitDepthStarts,n=g.bitDepths,l=g.metasAddress,s=g.blocksAddress,d=g.xOffset,a=g.xBuffer,b=g.biasAddress,Z=e.aligned_alloc,m=e.free,u=e.pv_picollm_weight_block_mixed_16x8_forward_single,B=e.pv_picollm_weight_block_mixed_16x8_add_bias,y=A.get(c),G=y.workerMemAddress,V=A.get(l),W=V.workerMemAddress,h=A.get(s),R=h.workerMemAddress,p=Z(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*r.length),X=Z(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*i.length),H=Z(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*n.length),S=Z(256,Float32Array.BYTES_PER_ELEMENT*a.length),J=Z(256,Float32Array.BYTES_PER_ELEMENT*r[0]),k=new Float32Array(t.buffer),(w=new Int32Array(t.buffer)).set(r,p/Int32Array.BYTES_PER_ELEMENT),w.set(i,X/Int32Array.BYTES_PER_ELEMENT),w.set(n,H/Int32Array.BYTES_PER_ELEMENT),k.set(a,S/Float32Array.BYTES_PER_ELEMENT),u(p,G,n.length,X,H,W,R,S+d,J),A.has(b)&&(f=A.get(b),F=f.workerMemAddress,v=f.allocSize,Y=v/Float32Array.BYTES_PER_ELEMENT,B(1,Y,J,F)),K=new Float32Array(t.buffer).slice(J/Float32Array.BYTES_PER_ELEMENT,J/Float32Array.BYTES_PER_ELEMENT+r[0]),m(p),m(X),m(H),m(S),m(J),I.abrupt("return",K);case 26:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),WI=function(){var I=A(o.mark((function I(g){var C,e,A,t,r,c,i,n,l,s,d,a,b,Z,m,u,B,y,G,V,W,h,R,p,X,H,S,J,k,w,f,F,v,Y,K,N;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.globals,e=C.exports,A=C.memAlloc,t=C.memory,r=g.shape,c=g.indicesAddress,i=g.bitDepthStarts,n=g.bitDepths,l=g.metasAddress,s=g.blocksAddress,d=g.n,a=g.xOffset,b=g.xBuffer,Z=g.biasAddress,m=e.aligned_alloc,u=e.free,B=e.pv_picollm_weight_block_mixed_16x8_forward_multiple,y=e.pv_picollm_weight_block_mixed_16x8_add_bias,G=A.get(c),V=G.workerMemAddress,W=A.get(l),h=W.workerMemAddress,R=A.get(s),p=R.workerMemAddress,X=m(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*r.length),H=m(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*i.length),S=m(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*n.length),J=m(Float32Array.BYTES_PER_ELEMENT,Float32Array.BYTES_PER_ELEMENT*b.length),k=m(Float32Array.BYTES_PER_ELEMENT,Float32Array.BYTES_PER_ELEMENT*(r[0]*d)),w=new Float32Array(t.buffer),(f=new Int32Array(t.buffer)).set(r,X/Int32Array.BYTES_PER_ELEMENT),f.set(i,H/Int32Array.BYTES_PER_ELEMENT),f.set(n,S/Int32Array.BYTES_PER_ELEMENT),w.set(b,J/Float32Array.BYTES_PER_ELEMENT),B(X,V,n.length,H,S,h,p,d,J+a,k),A.has(Z)&&(F=A.get(Z),v=F.workerMemAddress,Y=F.allocSize,K=Y/Float32Array.BYTES_PER_ELEMENT,y(d,K,k,v)),N=new Float32Array(t.buffer).slice(k/Float32Array.BYTES_PER_ELEMENT,k/Float32Array.BYTES_PER_ELEMENT+r[0]*d),u(X),u(H),u(S),u(J),u(k),I.abrupt("return",N);case 26:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}();function hI(I,g){var C="undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(!C){if(Array.isArray(I)||(C=function(I,g){if(!I)return;if("string"==typeof I)return RI(I,g);var C=Object.prototype.toString.call(I).slice(8,-1);"Object"===C&&I.constructor&&(C=I.constructor.name);if("Map"===C||"Set"===C)return Array.from(I);if("Arguments"===C||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))return RI(I,g)}(I))||g&&I&&"number"==typeof I.length){C&&(I=C);var e=0,A=function(){};return{s:A,n:function(){return e>=I.length?{done:!0}:{done:!1,value:I[e++]}},e:function(I){throw I},f:A}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,r=!0,c=!1;return{s:function(){C=C.call(I)},n:function(){var I=C.next();return r=I.done,I},e:function(I){c=!0,t=I},f:function(){try{r||null==C.return||C.return()}finally{if(c)throw t}}}}function RI(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}x(x(x(x(x({},nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BLOCKS,GI),nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_METAS,(function(I){var g=I.globals,C=g.exports,e=g.memAlloc,A=g.memory,t=I.memAddress,r=I.metas,c=(0,C.aligned_alloc)(Uint16Array.BYTES_PER_ELEMENT,r.length*Uint16Array.BYTES_PER_ELEMENT);c&&(e.set(t,{allocSize:r.length*Uint16Array.BYTES_PER_ELEMENT,workerMemAddress:c}),new Uint16Array(A.buffer).set(r,c/Uint16Array.BYTES_PER_ELEMENT))})),nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BIAS,(function(I){var g=I.globals,C=g.exports,e=g.memAlloc,A=g.memory,t=I.memAddress,r=I.bias,c=(0,C.aligned_alloc)(Float32Array.BYTES_PER_ELEMENT,r.length*Float32Array.BYTES_PER_ELEMENT);c&&(e.set(t,{allocSize:r.length*Float32Array.BYTES_PER_ELEMENT,workerMemAddress:c}),new Float32Array(A.buffer).set(r,c/Float32Array.BYTES_PER_ELEMENT))})),nI.WEIGHT_BLOCK_MIXED_16X8_FORWARD_SINGLE,VI),nI.WEIGHT_BLOCK_MIXED_16X8_FORWARD_MULTIPLE,WI);return function(I,g){var e=new gI;e.memory=I;for(var t=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},r=function(){var g=A(o.mark((function g(C,e,A,r,c){var i,n,l,s,d,a,b,Z,m,u,B,y,G;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:return C=w(C),e=w(e),A=w(A),r=w(r),c=w(c),i=W.aligned_alloc,n=h.getParser(navigator.userAgent),l=new Uint8Array(I.buffer),s=n.getBrowserName(),g.next=11,i(Uint8Array.BYTES_PER_ELEMENT,(s.length+1)*Uint8Array.BYTES_PER_ELEMENT);case 11:if(0!==(d=g.sent)){g.next=15;break}return t(c,-1),g.abrupt("return");case 15:for(t(C,d),a=0;a<s.length;a++)l[d+a]=s.charCodeAt(a);return l[d+s.length]=0,b=n.getBrowserVersion(),g.next=21,i(Uint8Array.BYTES_PER_ELEMENT,(b.length+1)*Uint8Array.BYTES_PER_ELEMENT);case 21:if(0!==(Z=g.sent)){g.next=25;break}return t(c,-1),g.abrupt("return");case 25:for(t(e,Z),m=0;m<b.length;m++)l[Z+m]=b.charCodeAt(m);return l[Z+b.length]=0,u=n.getOSName(),g.next=31,i(Uint8Array.BYTES_PER_ELEMENT,(u.length+1)*Uint8Array.BYTES_PER_ELEMENT);case 31:if(0!==(B=g.sent)){g.next=35;break}return t(c,-1),g.abrupt("return");case 35:for(t(A,B),y=0;y<u.length;y++)l[B+y]=u.charCodeAt(y);l[B+u.length]=0,G=self.navigator.hardwareConcurrency,t(r,G||1),t(c,0);case 41:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t){return g.apply(this,arguments)}}(),c=function(){var I=A(o.mark((function I(C,A,r){var c,i,n,l,s;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(C=w(C),r=w(r),g){I.next=5;break}return t(r,-1),I.abrupt("return");case 5:0===A&&(A=8),c=self.navigator.hardwareConcurrency,i=c&&c<A?c:A,n=[],l=0;case 10:if(!(l<i)){I.next=18;break}return s=new rI(new U),n.push(s),I.next=15,cI(s,{action:E.INIT,wasm:g});case 15:l++,I.next=10;break;case 18:if(!W.pv_picollm_feed_forward_almost_gelu_init_lookup_table){I.next=21;break}return I.next=21,W.pv_picollm_feed_forward_almost_gelu_init_lookup_table();case 21:D.addXpu(C,{deviceMem:new Set,numWorkers:i,workers:n,graph:e}),t(r,0);case 23:case"end":return I.stop()}}),I)})));return function(g,C,e){return I.apply(this,arguments)}}(),i=function(){var I=A(o.mark((function I(g,C,A,r,c){var i,n,l,s,d,a,b,Z;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),C=w(C),c=w(c),i=D.getXpu(g)){I.next=7;break}return t(c,-1),I.abrupt("return");case 7:if(n=i.workers,l=i.numWorkers,s=A,!Boolean(4&r)){I.next=35;break}if(d=[],!Boolean(8&r)){I.next=17;break}d.push(cI(n[0],{action:E.ALLOC,size:A,memAddress:C})),I.next=33;break;case 17:a=Boolean(2&r),s=Math.ceil(A/l),b=A,Z=0;case 21:if(!(Z<l)){I.next=33;break}if(!a){I.next=26;break}d.push(cI(n[Z],{action:E.ALLOC,size:A,memAddress:C})),I.next=30;break;case 26:if(d.push(cI(n[Z],{action:E.ALLOC,size:Math.min(b,s),memAddress:C})),!((b-=s)<=0)){I.next=30;break}return I.abrupt("break",33);case 30:Z++,I.next=21;break;case 33:return I.next=35,Promise.all(d);case 35:D.addMemory(C,{objAddress:g,memFlag:r,allocSize:A,chunkSize:s}),e.enabled||t(c,0);case 37:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t){return I.apply(this,arguments)}}(),n=function(){var I=A(o.mark((function I(g){var C,e,A,t,r,c;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),!D.hasMemory(g)){I.next=16;break}if(C=D.getMemory(g),e=C.objAddress,A=C.memFlag,t=D.getXpu(e),Boolean(4&A)){I.next=10;break}return I.next=8,W.free(g);case 8:I.next=14;break;case 10:for(r=[],c=0;c<t.numWorkers;c++)r.push(cI(t.workers[c],{action:E.FREE,memAddress:g}));return I.next=14,Promise.all(r);case 14:D.removeMemory(g),D.removeUniquePointer(g);case 16:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),l=function(){var g=A(o.mark((function g(C,e,A,t){var r,c,i,n,l,s,d,a,b,Z,m,u,B,y,G;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=w(C),e=w(e),r=D.getMemory(C)){g.next=5;break}return g.abrupt("return");case 5:if(c=r.objAddress,i=r.memFlag,n=r.chunkSize,l=D.getXpu(c),Boolean(4&i)){g.next=13;break}(s=new Uint8Array(I.buffer)).set(s.slice(e,e+t),C+A),g.next=38;break;case 13:if(d=[],a=new Uint8Array(I.buffer).slice(e,e+t),!Boolean(8&i)){g.next=20;break}d.push(cI(l.workers[0],{action:E.COPY_TO_XPU,memAddress:C,offset:A,buffer:a})),g.next=36;break;case 20:b=Boolean(2&i),Z=t,m=0;case 23:if(!(m<l.numWorkers)){g.next=36;break}if(!b){g.next=28;break}d.push(cI(l.workers[m],{action:E.COPY_TO_XPU,memAddress:C,offset:A,buffer:a})),g.next=33;break;case 28:if(u=m*n,A<(m+1)*n&&(y=n-(B=A>u?A-u:0),G=t-Z,d.push(cI(l.workers[m],{action:E.COPY_TO_XPU,memAddress:C,offset:B,buffer:a.slice(G,G+y)})),Z-=y),!(Z<=0)){g.next=33;break}return g.abrupt("break",36);case 33:m++,g.next=23;break;case 36:return g.next=38,Promise.all(d);case 38:case"end":return g.stop()}}),g)})));return function(I,C,e,A){return g.apply(this,arguments)}}(),s=function(){var g=A(o.mark((function g(C,e,A,t){var r,c,i,n,l,s,d,a,b,Z,m,u,B,y,G,V,W,h,R,p;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=w(C),e=w(e),r=D.getMemory(C)){g.next=5;break}return g.abrupt("return");case 5:if(c=r.objAddress,i=r.allocSize,n=r.memFlag,l=r.chunkSize,s=D.getXpu(c),Boolean(4&n)){g.next=13;break}(d=new Uint8Array(I.buffer)).set(d.slice(C+A,C+A+t),e),g.next=49;break;case 13:if(a=[],b=Boolean(2&n),Z=Boolean(8&n),!b&&!Z){g.next=20;break}a.push(cI(s.workers[0],{action:E.COPY_FROM_XPU,memAddress:C,offset:A,size:i})),g.next=31;break;case 20:m=i,u=0;case 22:if(!(u<s.numWorkers)){g.next=31;break}if(B=u*l,A<(u+1)*l&&(y=A>B?A-B:0,G=Math.min(m,l-y),a.push(cI(s.workers[u],{action:E.COPY_FROM_XPU,memAddress:C,offset:y,size:G})),m-=G),0!==m){g.next=28;break}return g.abrupt("break",31);case 28:u++,g.next=22;break;case 31:return g.next=33,Promise.all(a);case 33:V=g.sent,W=new Uint8Array(I.buffer),h=0,R=0;case 37:if(!(R<V.length)){g.next=49;break}if(p=V[R],!(h+p.length>t)){g.next=44;break}return W.set(p.slice(0,t-h),e+h),g.abrupt("break",49);case 44:W.set(p,e+h),h+=p.length;case 46:R++,g.next=37;break;case 49:case"end":return g.stop()}}),g)})));return function(I,C,e,A){return g.apply(this,arguments)}}(),d=function(){var g=A(o.mark((function g(C,e,A){var t,r,c,i,n,l,s,d,a,b;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=w(C),t=D.getMemory(C)){g.next=4;break}return g.abrupt("return");case 4:if(r=t.objAddress,c=t.allocSize,i=t.memFlag,n=t.chunkSize,l=D.getXpu(r),Boolean(4&i)){g.next=12;break}new Uint8Array(I.buffer).fill(e,C,C+A),g.next=35;break;case 12:if(s=[],!Boolean(8&i)){g.next=18;break}s.push(cI(l.workers[0],{action:E.MEMSET,memAddress:C,fillByte:e,size:c})),g.next=33;break;case 18:d=Boolean(2&i),a=A,b=0;case 21:if(!(b<l.numWorkers)){g.next=33;break}if(!d){g.next=26;break}s.push(cI(l.workers[b],{action:E.MEMSET,memAddress:C,fillByte:e,size:c})),g.next=30;break;case 26:if(s.push(cI(l.workers[b],{action:E.MEMSET,memAddress:C,fillByte:e,size:Math.min(a,n)})),!((a-=n)<=0)){g.next=30;break}return g.abrupt("break",33);case 30:b++,g.next=21;break;case 33:return g.next=35,Promise.all(s);case 35:case"end":return g.stop()}}),g)})));return function(I,C,e){return g.apply(this,arguments)}}(),a=function(){var I=A(o.mark((function I(g){var C;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:g=w(g),C=self.navigator.hardwareConcurrency,t(g,C||1);case 3:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),b=function(){var I=A(o.mark((function I(g){var C,e,A;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),C=D.getXpu(g)){I.next=4;break}return I.abrupt("return");case 4:for(e=[],A=0;A<C.numWorkers;A++)e.push(cI(C.workers[A],{action:E.TIMER_START,workerIndex:A}));return I.next=8,Promise.all(e);case 8:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),Z=function(){var I=A(o.mark((function I(g){var C,e,A;return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),C=D.getXpu(g)){I.next=4;break}return I.abrupt("return");case 4:for(e=[],A=0;A<C.numWorkers;A++)e.push(cI(C.workers[A],{action:E.TIMER_STOP}));return I.next=8,Promise.all(e);case 8:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),m=function(){var I=A(o.mark((function I(g){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),D.getXpu(g)){I.next=4;break}return I.abrupt("return");case 4:e.enabled=!0;case 5:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),u=function(){var I=A(o.mark((function I(g){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),D.getXpu(g)){I.next=4;break}return I.abrupt("return");case 4:e.enabled=!1;case 5:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),B=function(){var I=A(o.mark((function I(g,C){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=w(g),D.getXpu(g)){I.next=5;break}return t(C,-1),I.abrupt("return");case 5:return I.prev=5,I.next=8,e.execute();case 8:t(C,0),I.next=14;break;case 11:I.prev=11,I.t0=I.catch(5),t(C,-1);case 14:case"end":return I.stop()}}),I,null,[[5,11]])})));return function(g,C){return I.apply(this,arguments)}}(),y=function(){var g=A(o.mark((function g(C,e,A){var t;return o.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:return A=w(A),g.prev=1,g.next=4,W.aligned_alloc(C,e);case 4:t=g.sent,new Int32Array(I.buffer)[A/Int32Array.BYTES_PER_ELEMENT]=t,g.next=13;break;case 9:g.prev=9,g.t0=g.catch(1),new Int32Array(I.buffer)[A/Int32Array.BYTES_PER_ELEMENT]=0;case 13:case"end":return g.stop()}}),g,null,[[1,9]])})));return function(I,C,e){return g.apply(this,arguments)}}(),G=function(){var I=A(o.mark((function I(g){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return I.next=2,W.free(g);case 2:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),V=function(){var I=A(o.mark((function I(g,C,e,A){return o.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return I.next=2,W.pv_picollm_table_forward(g,C,e,A);case 2:case"end":return I.stop()}}),I)})));return function(g,C,e,A){return I.apply(this,arguments)}}(),W={aligned_alloc:function(I,g){throw new Error("aligned_alloc was not passed in from parent module")},free:function(I){throw new Error("free was not passed in from parent module")},pv_picollm_table_forward:function(I,g,C,e){throw new Error("pv_picollm_table_forward was not passed in from parent module")},pv_picollm_feed_forward_almost_gelu_init_lookup_table:void 0,pv_xpu_graphified_alloc_wasm:e.graphify(y,[2],2,void 0,1),pv_xpu_graphified_free_wasm:e.graphify(G,[0],0,void 0,1),pv_xpu_web_worker_device_info_wasm:r,pv_xpu_web_worker_device_init_wasm:c,pv_xpu_web_worker_device_cleanup_wasm:function(I){I=w(I);var g=D.getXpu(I);if(g){var C,e=hI(g.workers);try{for(e.s();!(C=e.n()).done;){C.value.terminate()}}catch(I){e.e(I)}finally{e.f()}D.removeXpu(I)}},pv_xpu_web_worker_device_get_unique_pointer_wasm:function(){return D.getUniquePointer()},pv_xpu_web_worker_device_mem_alloc_wasm:e.graphify(i,[1],1),pv_xpu_web_worker_device_mem_free_wasm:e.graphify(n,[0],0,void 0,void 0),pv_xpu_web_worker_device_mem_copy_to_xpu_wasm:e.graphify(l,[0,1],0,void 0,void 0),pv_xpu_web_worker_device_mem_copy_from_xpu_wasm:e.graphify(s,[0,1],-1,void 0,void 0),pv_xpu_web_worker_device_mem_memset_wasm:e.graphify(d,[0],0,void 0,void 0),pv_xpu_web_worker_get_max_workers_wasm:a,pv_xpu_web_worker_timer_start_wasm:b,pv_xpu_web_worker_timer_stop_wasm:Z,pv_xpu_web_worker_start_graph_wasm:m,pv_xpu_web_worker_stop_graph_wasm:u,pv_xpu_web_worker_execute_graph_wasm:B,pv_xpu_web_worker_picollm_table_forward_wasm:e.graphify(V,[2,3],3,void 0,void 0)},R=0,p=[iI,lI,oI,sI,dI,aI,bI,yI];R<p.length;R++)for(var X=p[R],H=0,S=Object.entries(X(I,e,W));H<S.length;H++){var J=C(S[H],2),k=J[0],f=J[1];W[k]=f}return W}}();
